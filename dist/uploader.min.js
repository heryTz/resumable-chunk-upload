(()=>{var _=Object.defineProperty;var S=(r,t,s)=>t in r?_(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s;var a=(r,t,s)=>(S(r,typeof t!="symbol"?t+"":t,s),s);var e=class{constructor(t,s){this.message=t,this.data=s??t}toString(){return this.message}};a(e,"GET_LAST_CHUNK_UPLOADED","GET_LAST_CHUNK_UPLOADED"),a(e,"UPLOAD_FILE_ERROR","UPLOAD_FILE_ERROR"),a(e,"UPLOAD_ABORTED","UPLOAD_ABORTED"),a(e,"REQUEST_TIMEOUT","REQUEST_TIMEOUT"),a(e,"NO_FILE","NO_FILE"),a(e,"NO_FILE_ID","NO_FILE_ID"),a(e,"NO_UPLOAD_STATUS_URL","NO_UPLOAD_STATUS_URL"),a(e,"NO_UPLOAD_URL","NO_UPLOAD_URL");var u=class{constructor(t,s){this.timeStarted=t,this.totalSize=s,this.uploadedBytes=0}increaseBytesUploaded=t=>(this.uploadedBytes+=t,this);calcul=()=>{let t=(Date.now()-this.timeStarted.getTime())/1e3,s=this.uploadedBytes/t;return Math.max(Math.floor((this.totalSize-this.uploadedBytes)/s),0)}};function c(r){return r.replace(/\/+$/,"")}function m(r){return Object.keys(r).map(t=>`${t}=${r[t]}`).join("&")}var d=!1;function f(r,t=0){return(...s)=>{d||(d=!0,setTimeout(()=>{r.apply(null,s),d=!1},t))}}var o=class{file=null;fileId=null;chunkNumber=1;chunkSize=10485760;chunkCount=1;uploadStatusUrl=null;uploadUrl=null;progressThrottleTime=3e3;requestTimeout=null;xhr=new XMLHttpRequest;remainingTimeCalculator=new u(new Date,0);uploadAborted=!1;headers={};handleProgress=null;checkParameters=async()=>{if(!this.file)throw new e(e.NO_FILE);if(this.getFileId()?.length<=0)throw new e(e.NO_FILE_ID);if(typeof this.uploadStatusUrl!="string")throw new e(e.NO_UPLOAD_STATUS_URL);if(typeof this.uploadUrl!="string")throw new e(e.NO_UPLOAD_URL);return!0};getUploadStatus=async()=>new Promise((t,s)=>{this.chunkCount=Math.ceil(this.file.size/this.chunkSize);let n=m({fileId:this.getFileId(),chunkCount:this.chunkCount}),i=new XMLHttpRequest;i.open("GET",`${this.uploadStatusUrl}?${n}`,!0),i.responseType="json",this.requestTimeout!==null&&(i.timeout=this.requestTimeout),Object.keys(this.headers).forEach(h=>{i.setRequestHeader(h,this.headers[h])}),i.ontimeout=()=>{s(new e(e.REQUEST_TIMEOUT,i))},i.onerror=i.onabort=()=>{s(new e(e.GET_LAST_CHUNK_UPLOADED,i))},i.onload=()=>{i.status===200?t(i.response.lastChunk):s(new e(e.GET_LAST_CHUNK_UPLOADED,i))},i.send()});uploadFile=async()=>new Promise((t,s)=>{let n=this.xhr;n.open("POST",`${this.uploadUrl}`,!0),n.responseType="json",this.requestTimeout!==null&&(n.timeout=this.requestTimeout),Object.keys(this.headers).forEach(h=>{n.setRequestHeader(h,this.headers[h])});let i=new FormData;i.append("file",this.getChunk()),i.append("fileId",this.getFileId()),i.append("chunkCount",this.chunkCount),i.append("chunkSize",this.chunkSize),i.append("chunkNumber",this.chunkNumber),i.append("fileSize",this.file.size),i.append("originalFilename",this.file.name),n.onload=n.onerror=h=>{n.status===200?this.chunkNumber<this.chunkCount?(this.chunkNumber++,this.uploadFile().then(t).catch(s)):t(n):(this.chunkNumber=1,s(new e(e.UPLOAD_FILE_ERROR,n)))},n.onabort=h=>{s(new e(e.UPLOAD_ABORTED,n))},n.ontimeout=()=>{s(new e(e.REQUEST_TIMEOUT,n))},n.upload.onprogress=f(h=>{if(this.uploadAborted)return;let p=(this.chunkNumber-1)*this.chunkSize+h.loaded,T=this.file.size,U=Math.min(Math.ceil(p/T*100),100),l=this.chunkNumber===this.chunkCount;this.handleProgress&&this.handleProgress({percent:l?100:U,loaded:l?this.file.size:p,remaining:l?0:this.remainingTimeCalculator.increaseBytesUploaded(h.loaded).calcul(this.chunkLoaded)})},this.progressThrottleTime),n.send(i)});upload=async()=>{try{await this.checkParameters();let t=await this.getUploadStatus();this.chunkNumber=t+1;let s=this.file.slice((this.chunkNumber-1)*this.chunkSize).size;return this.remainingTimeCalculator=new u(new Date,s),this.uploadAborted=!1,await this.uploadFile()}catch(t){throw t}};onProgress=(t,s)=>(this.handleProgress=t,s>=0&&(this.progressThrottleTime=parseInt(s)),this);abort=()=>{this.uploadAborted=!0,this.xhr.abort()};getChunk=()=>{let t=(this.chunkNumber-1)*this.chunkSize,s=Math.min(t+this.chunkSize,this.file.size);return this.file.slice(t,s)};getFileId=()=>{let t=this.file.name.split(".").pop(),s=`${this.file.size}-${this.file.lastModified}.${t}`;return this.fileId??s};setUploadStatusUrl=t=>(this.uploadStatusUrl=c(t),this);setUploadUrl=t=>(this.uploadUrl=c(t),this);setFile=t=>(this.file=t,this);setChunkSize=t=>(this.chunkSize=t,this);setFileId=t=>(this.fileId=t,this);setHeaders=t=>(this.headers=t??{},this);setRequestTimeout=t=>(this.requestTimeout=t,this)};var R=o;window.Uploader=o;window.UploadError=e;})();
